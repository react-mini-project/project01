{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nconst initialState = {\n  todos: [],\n  isLoading: false,\n  isSuccess: false,\n  error: null\n};\nexport const __getTodos = createAsyncThunk(\"todos/getTodos\", async (payload, thunkAPI) => {\n  try {\n    const data = await axios.get(\"http://localhost:3001/todos\");\n    return thunkAPI.fulfillWithValue(data.data);\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error);\n  }\n});\nexport const __addTodo = createAsyncThunk(\"todos/addTodo\", async (payload, thunkAPI) => {\n  try {\n    const data = await axios.post(\"http://localhost:3001/todos\", payload);\n    return thunkAPI.fulfillWithValue(data.data);\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error);\n  }\n});\nexport const __deleteTodo = createAsyncThunk(\"todos/deleteTodo\", async (payload, thunkAPI) => {\n  try {\n    const data = await axios.delete(`http://localhost:3001/todos/${payload}`);\n    return thunkAPI.fulfillWithValue(payload);\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error);\n  }\n});\nexport const __patchTodo = createAsyncThunk(\"todos/patchTodo\", async (payload, thunkAPI) => {\n  try {\n    const data = await axios.patch(`http://localhost:3001/todos/${payload.id}`, payload.edit);\n    return thunkAPI.fulfillWithValue(payload);\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error);\n  }\n});\nexport const todosSlice = createSlice({\n  name: \"todos\",\n  initialState,\n  reducers: {\n    clearTodo: (state, action) => {\n      state.isSuccess = true;\n    }\n  },\n  extraReducers: {\n    [__getTodos.pending]: state => {\n      state.isLoading = true; // 네트워크 요청이 시작되면 로딩상태를 true로 변경합니다.\n    },\n    [__getTodos.fulfilled]: (state, action) => {\n      state.isLoading = false; // 네트워크 요청이 끝났으니, false로 변경합니다.\n\n      state.todos = action.payload; // Store에 있는 todos에 서버에서 가져온 todos를 넣습니다.\n    },\n    [__getTodos.rejected]: (state, action) => {\n      state.isLoading = false; // 에러가 발생했지만, 네트워크 요청이 끝났으니, false로 변경합니다.\n\n      state.error = action.payload; // catch 된 error 객체를 state.error에 넣습니다.\n    },\n    [__addTodo.pending]: state => {\n      state.isLoading = true;\n      state.isSuccess = false;\n    },\n    [__addTodo.fulfilled]: (state, action) => {\n      state.isLoading = false;\n      state.isSuccess = true;\n      state.todos = [...state.todos, action.payload];\n    },\n    [__addTodo.rejected]: (state, action) => {\n      state.isLoading = false; // 에러가 발생했지만, 네트워크 요청이 끝났으니, false로 변경합니다.\n\n      state.error = action.payload; // catch 된 error 객체를 state.error에 넣습니다.\n    },\n    [__deleteTodo.pending]: state => {\n      state.isLoading = true;\n      state.isSuccess = false;\n    },\n    [__deleteTodo.fulfilled]: (state, action) => {\n      state.isLoading = false;\n      state.isSuccess = true;\n      state.todos = state.todos.filter(todo => todo.id !== action.payload);\n    },\n    [__deleteTodo.rejected]: (state, action) => {\n      state.isLoading = false; // 에러가 발생했지만, 네트워크 요청이 끝났으니, false로 변경합니다.\n\n      state.error = action.payload; // catch 된 error 객체를 state.error에 넣습니다.\n    }\n  }\n});\nexport const {} = todosSlice.actions;\nexport default todosSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","axios","initialState","todos","isLoading","isSuccess","error","__getTodos","payload","thunkAPI","data","get","fulfillWithValue","rejectWithValue","__addTodo","post","__deleteTodo","delete","__patchTodo","patch","id","edit","todosSlice","name","reducers","clearTodo","state","action","extraReducers","pending","fulfilled","rejected","filter","todo","actions","reducer"],"sources":["/Users/JJY/Desktop/react/dev/project01/src/redux/modules/todosSlice.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\nconst initialState = {\n  todos: [],\n  isLoading: false,\n  isSuccess: false,\n  error: null,\n};\n\nexport const __getTodos = createAsyncThunk(\n  \"todos/getTodos\",\n  async (payload, thunkAPI) => {\n    try {\n      const data = await axios.get(\"http://localhost:3001/todos\");\n      return thunkAPI.fulfillWithValue(data.data);\n    } catch (error) {\n      return thunkAPI.rejectWithValue(error);\n    }\n  }\n);\n\nexport const __addTodo = createAsyncThunk(\n  \"todos/addTodo\",\n  async (payload, thunkAPI) => {\n    try {\n      const data = await axios.post(\"http://localhost:3001/todos\", payload);\n      return thunkAPI.fulfillWithValue(data.data);\n    } catch (error) {\n      return thunkAPI.rejectWithValue(error);\n    }\n  }\n);\n\nexport const __deleteTodo = createAsyncThunk(\n  \"todos/deleteTodo\",\n  async (payload, thunkAPI) => {\n    try {\n      const data = await axios.delete(`http://localhost:3001/todos/${payload}`);\n      return thunkAPI.fulfillWithValue(payload);\n    } catch (error) {\n      return thunkAPI.rejectWithValue(error);\n    }\n  }\n);\nexport const __patchTodo = createAsyncThunk(\n  \"todos/patchTodo\",\n  async (payload, thunkAPI) => {\n    try {\n      const data = await axios.patch(`http://localhost:3001/todos/${payload.id}`, payload.edit);\n      return thunkAPI.fulfillWithValue(payload);\n    } catch (error) {\n      return thunkAPI.rejectWithValue(error);\n    }\n  }\n);\n\nexport const todosSlice = createSlice({\n  name: \"todos\",\n  initialState,\n  reducers: {\n    clearTodo: (state, action) => {\n      state.isSuccess = true\n    }\n  },\n  extraReducers: {\n    [__getTodos.pending]: (state) => {\n      state.isLoading = true; // 네트워크 요청이 시작되면 로딩상태를 true로 변경합니다.\n    },\n    [__getTodos.fulfilled]: (state, action) => {\n      state.isLoading = false; // 네트워크 요청이 끝났으니, false로 변경합니다.\n      state.todos = action.payload; // Store에 있는 todos에 서버에서 가져온 todos를 넣습니다.\n    },\n    [__getTodos.rejected]: (state, action) => {\n      state.isLoading = false; // 에러가 발생했지만, 네트워크 요청이 끝났으니, false로 변경합니다.\n      state.error = action.payload; // catch 된 error 객체를 state.error에 넣습니다.\n    },\n    [__addTodo.pending]: (state) => {\n      state.isLoading = true;\n      state.isSuccess = false;\n    },\n    [__addTodo.fulfilled]: (state, action) => {\n      state.isLoading = false;\n      state.isSuccess = true;\n      state.todos = [...state.todos, action.payload]\n    },\n    [__addTodo.rejected]: (state, action) => {\n      state.isLoading = false; // 에러가 발생했지만, 네트워크 요청이 끝났으니, false로 변경합니다.\n      state.error = action.payload; // catch 된 error 객체를 state.error에 넣습니다.\n    },\n    [__deleteTodo.pending]: (state) => {\n      state.isLoading = true;\n      state.isSuccess = false;\n    },\n    [__deleteTodo.fulfilled]: (state, action) => {\n      state.isLoading = false;\n      state.isSuccess = true;\n      state.todos = state.todos.filter((todo) => todo.id !== action.payload\n      )\n    },\n    [__deleteTodo.rejected]: (state, action) => {\n      state.isLoading = false; // 에러가 발생했지만, 네트워크 요청이 끝났으니, false로 변경합니다.\n      state.error = action.payload; // catch 된 error 객체를 state.error에 넣습니다.\n    },\n  },\n});\n\nexport const {} = todosSlice.actions;\nexport default todosSlice.reducer;"],"mappings":"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"},"metadata":{},"sourceType":"module"}