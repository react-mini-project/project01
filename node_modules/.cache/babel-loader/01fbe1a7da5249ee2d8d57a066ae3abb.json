{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nconst initialState = {\n  todos: [],\n  isLoading: false,\n  error: null\n}; // 우리가 추가한 Thunk 함수\n\nexport const __getTodos = createAsyncThunk(\"todos/getTodos\", async (payload, thunkAPI) => {\n  try {\n    const data = await axios.get(\"http://localhost:3001/todos\");\n    return thunkAPI.fulfillWithValue(data.data);\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error);\n  }\n});\nconst todosSlice = createSlice({\n  name: \"todos\",\n  initialState,\n  reducers: {},\n  extraReducers: {\n    // 새롭게 사용할 extraReducer를 꺼내볼까요?\n    [__getTodos.fulfilled]: (state, action) => {\n      console.log(\"fulfilled 상태\", state, action); // promise가 fullfilled일 때, dispatch\n    }\n  }\n});\nexport const {} = todosSlice.actions;\nexport default todosSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","axios","initialState","todos","isLoading","error","__getTodos","payload","thunkAPI","data","get","fulfillWithValue","rejectWithValue","todosSlice","name","reducers","extraReducers","fulfilled","state","action","console","log","actions","reducer"],"sources":["/Users/JJY/Desktop/react/dev/week-react-03/src/redux/modules/todosSlice.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\nconst initialState = {\n  todos: [],\n  isLoading: false,\n  error: null,\n};\n\n// 우리가 추가한 Thunk 함수\nexport const __getTodos = createAsyncThunk(\n  \"todos/getTodos\",\n  async (payload, thunkAPI) => {\n    try {\n      const data = await axios.get(\"http://localhost:3001/todos\");\n      return thunkAPI.fulfillWithValue(data.data)\n    } catch(error) {\n      return thunkAPI.rejectWithValue(error)\n    }\n  }\n)\n\nconst todosSlice = createSlice({\n  name: \"todos\",\n  initialState,\n  reducers: {},\n  extraReducers: { // 새롭게 사용할 extraReducer를 꺼내볼까요?\n    [__getTodos.fulfilled] : (state, action) => {\n      console.log(\"fulfilled 상태\", state, action); // promise가 fullfilled일 때, dispatch\n    }\n  }, \n});\n\nexport const {} = todosSlice.actions;\nexport default todosSlice.reducer;"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,WAA3B,QAA8C,kBAA9C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAMC,YAAY,GAAG;EACnBC,KAAK,EAAE,EADY;EAEnBC,SAAS,EAAE,KAFQ;EAGnBC,KAAK,EAAE;AAHY,CAArB,C,CAMA;;AACA,OAAO,MAAMC,UAAU,GAAGP,gBAAgB,CACxC,gBADwC,EAExC,OAAOQ,OAAP,EAAgBC,QAAhB,KAA6B;EAC3B,IAAI;IACF,MAAMC,IAAI,GAAG,MAAMR,KAAK,CAACS,GAAN,CAAU,6BAAV,CAAnB;IACA,OAAOF,QAAQ,CAACG,gBAAT,CAA0BF,IAAI,CAACA,IAA/B,CAAP;EACD,CAHD,CAGE,OAAMJ,KAAN,EAAa;IACb,OAAOG,QAAQ,CAACI,eAAT,CAAyBP,KAAzB,CAAP;EACD;AACF,CATuC,CAAnC;AAYP,MAAMQ,UAAU,GAAGb,WAAW,CAAC;EAC7Bc,IAAI,EAAE,OADuB;EAE7BZ,YAF6B;EAG7Ba,QAAQ,EAAE,EAHmB;EAI7BC,aAAa,EAAE;IAAE;IACf,CAACV,UAAU,CAACW,SAAZ,GAAyB,CAACC,KAAD,EAAQC,MAAR,KAAmB;MAC1CC,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BH,KAA5B,EAAmCC,MAAnC,EAD0C,CACE;IAC7C;EAHY;AAJc,CAAD,CAA9B;AAWA,OAAO,MAAM,KAAKN,UAAU,CAACS,OAAtB;AACP,eAAeT,UAAU,CAACU,OAA1B"},"metadata":{},"sourceType":"module"}