{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useCallback, useState } from \"react\";\n\nconst useInput = initialState => {\n  _s();\n\n  // 2. value는 useState로 관리하고,\n  const [value, setValue] = useState(initialState); // 3. 핸들러 로직도 구현합니다.\n\n  const handler = e => {\n    setValue(e.target.value);\n  };\n\n  const reset = useCallback(() => setValue(\"\")); // 1. 이 훅은 [ ] 을 반환하는데, 첫번째는 value, 두번째는 핸들러를 반환합니다.\n\n  return [value, handler, reset];\n};\n\n_s(useInput, \"BnjSeVC3vNDX4II/+GBR4PiNdF8=\");\n\nexport default useInput;","map":{"version":3,"names":["useCallback","useState","useInput","initialState","value","setValue","handler","e","target","reset"],"sources":["/Users/JJY/Desktop/react/dev/project01/src/hooks/useInput.js"],"sourcesContent":["import { useCallback, useState } from \"react\"\n\nconst useInput = (initialState) => {\n    // 2. value는 useState로 관리하고,\n    const [value, setValue] = useState(initialState)\n\n    // 3. 핸들러 로직도 구현합니다.\n    const handler = (e) => {\n        setValue(e.target.value)\n    }\n    \n    const reset = useCallback(()=> setValue(\"\"))\n\n    // 1. 이 훅은 [ ] 을 반환하는데, 첫번째는 value, 두번째는 핸들러를 반환합니다.\n    return [value, handler, reset]\n}\n\nexport default useInput\n"],"mappings":";;AAAA,SAASA,WAAT,EAAsBC,QAAtB,QAAsC,OAAtC;;AAEA,MAAMC,QAAQ,GAAIC,YAAD,IAAkB;EAAA;;EAC/B;EACA,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAACE,YAAD,CAAlC,CAF+B,CAI/B;;EACA,MAAMG,OAAO,GAAIC,CAAD,IAAO;IACnBF,QAAQ,CAACE,CAAC,CAACC,MAAF,CAASJ,KAAV,CAAR;EACH,CAFD;;EAIA,MAAMK,KAAK,GAAGT,WAAW,CAAC,MAAKK,QAAQ,CAAC,EAAD,CAAd,CAAzB,CAT+B,CAW/B;;EACA,OAAO,CAACD,KAAD,EAAQE,OAAR,EAAiBG,KAAjB,CAAP;AACH,CAbD;;GAAMP,Q;;AAeN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}