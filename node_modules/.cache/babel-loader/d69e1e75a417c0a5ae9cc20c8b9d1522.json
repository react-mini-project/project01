{"ast":null,"code":"var _jsxFileName = \"/Users/JJY/Desktop/react/dev/week-react-03/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\"; // axios import 합니다.\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  // 새롭게 생성하는 todo를 관리하는 state\n  const [todo, setTodo] = useState({\n    title: \"\"\n  });\n  const [todos, setTodos] = useState(null); // patch에서 사용할 id, 수정값의 state를 추가\n\n  const [targetID, setTargetID] = useState(null);\n  const [editTodo, setEditTodo] = useState({\n    title: \"\"\n  }); // axios를 통해서 get 요청을 하는 함수를 생성합니다.\n  // 비동기처리를 해야하므로 asyne/await 구문을 통해서 처리합니다.\n  // const fetchTodos = async () => {\n  // \tconst {data} = await axios.get(\"http://3.36.96.74/posts\")\n  // \tsetTodos(data)  // 서버로부터 fetching한 데이터를 useState의 state로 set합니다.\n  // }\n  // axios.defaults.withCredentials = true;\n\n  const getApi = async () => {\n    const {\n      data\n    } = await axios.get(\"http://100.24.18.154:3000/post\");\n    const data2 = data.post;\n    setTodos(data2);\n  }; // const testDB = async () => {\n  // \tconst {data} = axios.get(\"http://100.24.18.154:3000/post\")\n  // \tsetTodos(data)\n  // }\n  // const getApi = async () => {\n  // \tconst data = await axios.get(\"https://cors-anywhere.herokuapp.com/http://3.36.96.74/posts\").then((res)=>res.data.post)\n  // \tsetTodos(data)\n  // }\n\n\n  useEffect(() => {\n    getApi(); // testDB()\n  }, []);\n  console.log(todos);\n\n  const onSubmitHandler = async todo => {\n    await axios.post(\"http://100.24.18.154:3000/post\", todo);\n  }; // 새롭게 추가한 삭제 버튼 이벤트 핸들러\n\n\n  const onClickDeleteButtonHandler = async todoID => {\n    await axios.delete(`http://100.24.18.154:3000/post/${todoID}`);\n  }; // 수정버튼 이벤트 핸들러 추가\n\n\n  const onClickEditButtonHandler = async (todoID, edit) => {\n    const getTodo = todos.filter(todo => {\n      console.log(todo.id, Number(todoID));\n      return todo.id === Number(todoID);\n    });\n    console.log(getTodo);\n    await axios.patch(`http://100.24.18.154:3000/post/${todoID}`, getTodo);\n  }; // 생성한 함수를 컴포넌트가 mount 됐을 때 실행하기 위해 useEffect를 사용합니다.\n\n\n  useEffect(() => {\n    // effect 구문에 생성한 함수를 넣어 실행합니다.\n    // fetchTodos()\n    getApi();\n  }, []); // data fetching이 정상적으로 되었는지 콘솔을 통해 확인합니다.\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"API \\uC5F0\\uACB0\\uD558\\uACE0 \\uC2F6\\uB2E4\", /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: targetID,\n        type: \"number\",\n        placeholder: \"\\uC218\\uC815\\uD558\\uACE0 \\uC2F6\\uC740 Todo ID\",\n        onChange: e => {\n          setTargetID(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: editTodo.title,\n        type: \"text\",\n        placeholder: \"\\uD0C0\\uC774\\uD2C0 \\uC218\\uC815\\uAC12 \\uC785\\uB825\",\n        onChange: e => {\n          setEditTodo({ ...editTodo,\n            title: e.target.value\n          });\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        // type='button'을 추가해야 form의 영향에서 벗어남\n        type: \"button\",\n        onClick: () => {\n          onClickEditButtonHandler(targetID, editTodo);\n          setTargetID(null);\n          setEditTodo({\n            title: \"\"\n          });\n        },\n        children: \"\\uC218\\uC815\\uD558\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: todos === null || todos === void 0 ? void 0 : todos.map(todo => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\"id: \", todo.id]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\"title: \", todo.title]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\"nickname: \", todo.nickname]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\"content: \", todo.content]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\"likes: \", todo.likes]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\"createdAt: \", todo.createdAt]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\"updatedAt: \", todo.updatedAt]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 8\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => onClickDeleteButtonHandler(todo.id),\n          children: \"\\uC0AD\\uC81C\\uD558\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 7\n        }, this)]\n      }, todo.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 6\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 3\n  }, this) // <div>\n  // \t\t<input\n  // \t\t\tvalue={todo.title}\n  // \t\t\ttype=\"text\"\n  // \t\t\tonChange={(e)=> {\n  // \t\t\t\tconst {value} = e.target;\n  // \t\t\t\tsetTodo({\n  // \t\t\t\t\t...todo, title: value\n  // \t\t\t\t})\n  // \t\t\t}}\n  // \t\t/>\n  // \t\t<button>추가하기</button>\n  // \t</form>\n  // \t<div>\n  // \t\t{todos?.map((todo)=> (\n  // \t\t\t<div key={todo.id}>\n  // \t\t\t\t{todo.title}\n  // \t\t\t\t{/* 디자인이 요상하긴 하지만, 삭제 버튼 추가! */}\n  // \t\t\t\t<button\n  // \t\t\t\t\ttype=\"button\"\n  // \t\t\t\t\tonClick={()=>onClickDeleteButtonHandler(todo.id)}\n  // \t\t\t\t>\n  // \t\t\t\t\t삭제하기\n  // \t\t\t\t</button>\n  // \t\t\t</div>\n  // \t\t))}\n  // \t</div>\n  // </div>\n  ;\n};\n\n_s(App, \"Any8EcFhufXXIrmhBFYTGPxT8Kk=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","axios","App","todo","setTodo","title","todos","setTodos","targetID","setTargetID","editTodo","setEditTodo","getApi","data","get","data2","post","console","log","onSubmitHandler","onClickDeleteButtonHandler","todoID","delete","onClickEditButtonHandler","edit","getTodo","filter","id","Number","patch","e","target","value","map","nickname","content","likes","createdAt","updatedAt"],"sources":["/Users/JJY/Desktop/react/dev/week-react-03/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\"\nimport axios from \"axios\" // axios import 합니다.\n\nconst App = () => {\n\t// 새롭게 생성하는 todo를 관리하는 state\n\tconst [todo, setTodo] = useState({\n\t\ttitle: \"\",\n\t})\n\n\tconst [todos, setTodos] = useState(null)\n\n\t// patch에서 사용할 id, 수정값의 state를 추가\n\tconst [targetID, setTargetID] = useState(null)\n\tconst [editTodo, setEditTodo] = useState({\n\t\ttitle:\"\"\n\t})\n\n\t// axios를 통해서 get 요청을 하는 함수를 생성합니다.\n\t// 비동기처리를 해야하므로 asyne/await 구문을 통해서 처리합니다.\n\t// const fetchTodos = async () => {\n\t// \tconst {data} = await axios.get(\"http://3.36.96.74/posts\")\n\n\t// \tsetTodos(data)  // 서버로부터 fetching한 데이터를 useState의 state로 set합니다.\n\t// }\n\n\t// axios.defaults.withCredentials = true;\n\n\tconst getApi = async () => {\n\t\tconst { data } = await axios.get(\"http://100.24.18.154:3000/post\")\n\t\tconst data2 = data.post\n\n\t\tsetTodos(data2)\n\n\t}\n\n\t// const testDB = async () => {\n\t// \tconst {data} = axios.get(\"http://100.24.18.154:3000/post\")\n\t// \tsetTodos(data)\n\t// }\n\n\n\t// const getApi = async () => {\n\t// \tconst data = await axios.get(\"https://cors-anywhere.herokuapp.com/http://3.36.96.74/posts\").then((res)=>res.data.post)\n\t// \tsetTodos(data)\n\t// }\n\n\tuseEffect(() => {\n\t\tgetApi()\n\t\t// testDB()\n\t}, [])\n\tconsole.log(todos)\n\n\tconst onSubmitHandler = async (todo) => {\n\t\tawait axios.post(\"http://100.24.18.154:3000/post\", todo)\n\n\t}\n\n\t// 새롭게 추가한 삭제 버튼 이벤트 핸들러\n\tconst onClickDeleteButtonHandler = async (todoID) => {\n\t\tawait axios.delete(`http://100.24.18.154:3000/post/${todoID}`)\n\t\t\n\t}\n\n\t// 수정버튼 이벤트 핸들러 추가\n\tconst onClickEditButtonHandler = async (todoID, edit) => {\n\t\t\n\t\tconst getTodo = todos.filter((todo)=> {\n\t\t\tconsole.log(todo.id, Number(todoID))\n\t\t\treturn todo.id === Number(todoID)\n\t\t})\n\t\tconsole.log(getTodo)\n\t\tawait axios.patch(`http://100.24.18.154:3000/post/${todoID}`, getTodo)\n\t}\n\n\n\t// 생성한 함수를 컴포넌트가 mount 됐을 때 실행하기 위해 useEffect를 사용합니다.\n\tuseEffect(() => {\n\t\t// effect 구문에 생성한 함수를 넣어 실행합니다.\n\t\t// fetchTodos()\n\t\tgetApi()\n\t}, [])\n\n\t// data fetching이 정상적으로 되었는지 콘솔을 통해 확인합니다.\n\n\n\treturn (\n\t\t<div>\n\t\t\tAPI 연결하고 싶다\n\t\t\t<form>\n\t\t\t\t{/* 수정기능에 필요한 id, 수정값 input 2개와 수정하기 버튼을 추가 */}\n\t\t\t\t<input\n\t\t\t\t\tvalue={targetID}\n\t\t\t\t\ttype=\"number\"\n\t\t\t\t\tplaceholder=\"수정하고 싶은 Todo ID\"\n\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\tsetTargetID(e.target.value)\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t\t<input\n\t\t\t\t\tvalue={editTodo.title}\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tplaceholder=\"타이틀 수정값 입력\"\n\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\tsetEditTodo({\n\t\t\t\t\t\t\t...editTodo, title: e.target.value\n\t\t\t\t\t\t})\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t\t<button\n\t\t\t\t\t// type='button'을 추가해야 form의 영향에서 벗어남\n\t\t\t\t\ttype=\"button\"\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tonClickEditButtonHandler(targetID, editTodo)\n\t\t\t\t\t\tsetTargetID(null)\n\t\t\t\t\t\tsetEditTodo({ title: \"\" })\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t수정하기\n\t\t\t\t</button>\n\t\t\t</form>\n\t\t\t<div>\n\t\t\t\t{todos?.map((todo) => (\n\t\t\t\t\t<div key={todo.id}>\n\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t<li>id: {todo.id}</li>\n\t\t\t\t\t\t\t<li>title: {todo.title}</li>\n\t\t\t\t\t\t\t<li>nickname: {todo.nickname}</li>\n\t\t\t\t\t\t\t<li>content: {todo.content}</li>\n\t\t\t\t\t\t\t<li>likes: {todo.likes}</li>\n\t\t\t\t\t\t\t<li>createdAt: {todo.createdAt}</li>\n\t\t\t\t\t\t\t<li>updatedAt: {todo.updatedAt}</li>\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\n\t\t\t\t\t\t{/* 디자인이 요상하긴 하지만, 삭제 버튼 추가! */}\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\tonClick={() => onClickDeleteButtonHandler(todo.id)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t삭제하기\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t))}\n\t\t\t</div>\n\t\t</div>\n\t\t// <div>\n\n\n\t\t// \t\t<input\n\t\t// \t\t\tvalue={todo.title}\n\t\t// \t\t\ttype=\"text\"\n\t\t// \t\t\tonChange={(e)=> {\n\t\t// \t\t\t\tconst {value} = e.target;\n\t\t// \t\t\t\tsetTodo({\n\t\t// \t\t\t\t\t...todo, title: value\n\t\t// \t\t\t\t})\n\t\t// \t\t\t}}\n\t\t// \t\t/>\n\t\t// \t\t<button>추가하기</button>\n\t\t// \t</form>\n\t\t// \t<div>\n\t\t// \t\t{todos?.map((todo)=> (\n\t\t// \t\t\t<div key={todo.id}>\n\t\t// \t\t\t\t{todo.title}\n\t\t// \t\t\t\t{/* 디자인이 요상하긴 하지만, 삭제 버튼 추가! */}\n\t\t// \t\t\t\t<button\n\t\t// \t\t\t\t\ttype=\"button\"\n\t\t// \t\t\t\t\tonClick={()=>onClickDeleteButtonHandler(todo.id)}\n\t\t// \t\t\t\t>\n\t\t// \t\t\t\t\t삭제하기\n\t\t// \t\t\t\t</button>\n\t\t// \t\t\t</div>\n\t\t// \t\t))}\n\t\t// \t</div>\n\t\t// </div>\n\t)\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module"}