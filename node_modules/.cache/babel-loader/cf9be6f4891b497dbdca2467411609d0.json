{"ast":null,"code":"var _jsxFileName = \"/Users/JJY/Desktop/react/dev/week-react-03/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\"; // axios import 합니다.\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  // 새롭게 생성하는 todo를 관리하는 state\n  const [todo, setTodo] = useState({\n    title: \"\"\n  });\n  const [todos, setTodos] = useState(null); // patch에서 사용할 id, 수정값의 state를 추가\n\n  const [targetID, setTargetID] = useState(null);\n  const [editTodo, setEditTodo] = useState({\n    title: \"\"\n  }); // axios를 통해서 get 요청을 하는 함수를 생성합니다.\n  // 비동기처리를 해야하므로 asyne/await 구문을 통해서 처리합니다.\n\n  const fetchTodos = async () => {\n    const {\n      data\n    } = await axios.get(\"http://localhost:3001/todos\");\n    setTodos(data); // 서버로부터 fetching한 데이터를 useState의 state로 set합니다.\n  };\n\n  const onSubmitHandler = async todo => {\n    await axios.post(\"http://localhost:3001/todos\", todo);\n    fetchTodos();\n  }; // 새롭게 추가한 삭제 버튼 이벤트 핸들러\n\n\n  const onClickDeleteButtonHandler = async todoID => {\n    await axios.delete(`http://localhost:3001/todos/${todoID}`);\n    fetchTodos();\n  }; // 수정버튼 이벤트 핸들러 추가\n\n\n  const onClickEditButtonHandler = (todoID, edit) => {\n    axios.patch(`http://localhost:3001/todos/${todoID}`, edit);\n    fetchTodos();\n  }; // 생성한 함수를 컴포넌트가 mount 됐을 때 실행하기 위해 useEffect를 사용합니다.\n\n\n  useEffect(() => {\n    // effect 구문에 생성한 함수를 넣어 실행합니다.\n    fetchTodos();\n  }, []); // data fetching이 정상적으로 되었는지 콘솔을 통해 확인합니다.\n\n  console.log(todos);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => {\n        // submit했을 때 브라우저의 새로고침을 방지합니다.\n        e.preventDefault();\n        onSubmitHandler(todo);\n        setTodo({\n          title: \"\"\n        });\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"\\uC218\\uC815\\uD558\\uACE0 \\uC2F6\\uC740 Todo ID\",\n        onChange: e => {\n          setTargetID(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"\\uC218\\uC815\\uAC12 \\uC785\\uB825\",\n        onChange: e => {\n          setEditTodo({ ...editTodo,\n            title: e.target.value\n          });\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        // type='button'을 추가해야 form의 영향에서 벗어남\n        type: \"button\",\n        onClick: () => onClickEditButtonHandler(targetID, editTodo),\n        children: \"\\uC218\\uC815\\uD558\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: todo.title,\n        type: \"text\",\n        onChange: e => {\n          const {\n            value\n          } = e.target;\n          setTodo({ ...todo,\n            title: value\n          });\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"\\uCD94\\uAC00\\uD558\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: todos === null || todos === void 0 ? void 0 : todos.map(todo => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [todo.title, /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => onClickDeleteButtonHandler(todo.id),\n          children: \"\\uC0AD\\uC81C\\uD558\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 7\n        }, this)]\n      }, todo.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 6\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 3\n  }, this);\n};\n\n_s(App, \"PxjubjdcV+mT5gquIl8lglv7RH4=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","axios","App","todo","setTodo","title","todos","setTodos","targetID","setTargetID","editTodo","setEditTodo","fetchTodos","data","get","onSubmitHandler","post","onClickDeleteButtonHandler","todoID","delete","onClickEditButtonHandler","edit","patch","console","log","e","preventDefault","target","value","map","id"],"sources":["/Users/JJY/Desktop/react/dev/week-react-03/src/App.js"],"sourcesContent":["import React, {useEffect, useState} from \"react\"\nimport axios from \"axios\" // axios import 합니다.\n\nconst App = () => {\n\t// 새롭게 생성하는 todo를 관리하는 state\n\tconst [todo, setTodo] = useState({\n\t\ttitle: \"\",\n\t})\n\n\tconst [todos, setTodos] = useState(null)\n\n\t// patch에서 사용할 id, 수정값의 state를 추가\n\tconst [targetID, setTargetID] = useState(null)\n\tconst [editTodo, setEditTodo] = useState({\n\t\ttitle: \"\",\n\t})\n\n\t// axios를 통해서 get 요청을 하는 함수를 생성합니다.\n\t// 비동기처리를 해야하므로 asyne/await 구문을 통해서 처리합니다.\n\tconst fetchTodos = async () => {\n\t\tconst {data} = await axios.get(\"http://localhost:3001/todos\")\n\t\tsetTodos(data)  // 서버로부터 fetching한 데이터를 useState의 state로 set합니다.\n\t}\n\t\n\tconst onSubmitHandler = async (todo) => {\n\t\tawait axios.post(\"http://localhost:3001/todos\", todo)\n\t\tfetchTodos()\n\t}\n\n\t// 새롭게 추가한 삭제 버튼 이벤트 핸들러\n\tconst onClickDeleteButtonHandler = async (todoID) => {\n\t\tawait axios.delete(`http://localhost:3001/todos/${todoID}`)\n\t\tfetchTodos()\n\t}\n\n\t// 수정버튼 이벤트 핸들러 추가\n\tconst onClickEditButtonHandler = (todoID, edit) => {\n\t\taxios.patch(`http://localhost:3001/todos/${todoID}`, edit)\n\t\tfetchTodos()\n\t} \n\n\t// 생성한 함수를 컴포넌트가 mount 됐을 때 실행하기 위해 useEffect를 사용합니다.\n\tuseEffect(()=> {\n\t\t// effect 구문에 생성한 함수를 넣어 실행합니다.\n\t\tfetchTodos()\n\t},[])\n\n\t// data fetching이 정상적으로 되었는지 콘솔을 통해 확인합니다.\n\tconsole.log(todos)\n\n\treturn (\n\t\t<div>\n\t\t\t<form onSubmit={(e)=> {\n\t\t\t\t// submit했을 때 브라우저의 새로고침을 방지합니다.\n\t\t\t\te.preventDefault();\n\t\t\t\tonSubmitHandler(todo)\n\t\t\t\tsetTodo({title:\"\"})\n\t\t\t}}>\n\t\t\t\t{/* 수정기능에 필요한 id, 수정값 input 2개와 수정하기 버튼을 추가 */}\n\t\t\t\t<input\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tplaceholder=\"수정하고 싶은 Todo ID\"\n\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\tsetTargetID(e.target.value)\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t\t<input\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tplaceholder=\"수정값 입력\"\n\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\tsetEditTodo({\n\t\t\t\t\t\t\t...editTodo, title: e.target.value\n\t\t\t\t\t\t})\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t\t<button\n\t\t\t\t\t// type='button'을 추가해야 form의 영향에서 벗어남\n\t\t\t\t\ttype=\"button\"\n\t\t\t\t\tonClick={() => onClickEditButtonHandler(targetID, editTodo)}\n\t\t\t\t>\n\t\t\t\t\t수정하기\n\t\t\t\t</button>\n\t\t\t\t<input\n\t\t\t\t\tvalue={todo.title}\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tonChange={(e)=> {\n\t\t\t\t\t\tconst {value} = e.target;\n\t\t\t\t\t\tsetTodo({\n\t\t\t\t\t\t\t...todo, title: value\n\t\t\t\t\t\t})\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t\t<button>추가하기</button>\n\t\t\t</form>\n\t\t\t<div>\n\t\t\t\t{todos?.map((todo)=> (\n\t\t\t\t\t<div key={todo.id}>\n\t\t\t\t\t\t{todo.title}\n\t\t\t\t\t\t{/* 디자인이 요상하긴 하지만, 삭제 버튼 추가! */}\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\tonClick={()=>onClickDeleteButtonHandler(todo.id)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t삭제하기\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t))}\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module"}