{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\n\nconst useInput = () => {\n  _s();\n\n  // 2. value는 useState로 관리하고,\n  const [value, setValue] = useState(\"\"); // 3. 핸들러 로직도 구현합니다.\n\n  const handler = event => {\n    setValue(e.target.value);\n  }; // 1. 이 훅은 [ ] 을 반환하는데, 첫번째는 value, 두번째는 핸들러를 반환합니다.\n\n\n  return [value, handler];\n};\n\n_s(useInput, \"dBtK6I2q1m3rcfzPBa0nrbv/iCI=\");\n\nexport default useInput;","map":{"version":3,"names":["React","useState","useInput","value","setValue","handler","event","e","target"],"sources":["/Users/JJY/Desktop/react/dev/project01/src/hooks/useInput.js"],"sourcesContent":["import React, { useState } from \"react\"\n\nconst useInput = () => {\n    // 2. value는 useState로 관리하고,\n    const [value, setValue] = useState(\"\")\n\n    // 3. 핸들러 로직도 구현합니다.\n    const handler = (event) => {\n        setValue(e.target.value)\n    }\n    \n    // 1. 이 훅은 [ ] 을 반환하는데, 첫번째는 value, 두번째는 핸들러를 반환합니다.\n    return [value, handler]\n}\n\nexport default useInput\n"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,MAAMC,QAAQ,GAAG,MAAM;EAAA;;EACnB;EACA,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBH,QAAQ,CAAC,EAAD,CAAlC,CAFmB,CAInB;;EACA,MAAMI,OAAO,GAAIC,KAAD,IAAW;IACvBF,QAAQ,CAACG,CAAC,CAACC,MAAF,CAASL,KAAV,CAAR;EACH,CAFD,CALmB,CASnB;;;EACA,OAAO,CAACA,KAAD,EAAQE,OAAR,CAAP;AACH,CAXD;;GAAMH,Q;;AAaN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}