{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nconst initialState = {\n  comments: [],\n  isLoading: false,\n  isSuccess: false,\n  error: null\n};\nexport const __getComments = createAsyncThunk(\"comments/getComments\", async (payload, thunkAPI) => {\n  try {\n    const data = await axios.get(\"http://localhost:3001/comments\");\n    return thunkAPI.fulfillWithValue(data.data);\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error);\n  }\n});\nexport const __addComment = createAsyncThunk(\"comments/addComment\", async (payload, thunkAPI) => {\n  try {\n    const data = await axios.post(\"http://localhost:3001/comments\", payload);\n    return thunkAPI.fulfillWithValue(data.data);\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error);\n  }\n});\nexport const __deleteComment = createAsyncThunk(\"comments/deleteComment\", async (payload, thunkAPI) => {\n  try {\n    await axios.delete(`http://localhost:3001/comments/${payload}`);\n    return thunkAPI.fulfillWithValue(payload);\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error);\n  }\n});\nexport const __editComment = createAsyncThunk(\"comments/editComment\", async (payload, thunkAPI) => {\n  try {\n    await axios.patch(`http://localhost:3001/comments/${payload.id}`, payload);\n    return thunkAPI.fulfillWithValue(payload);\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error);\n  }\n});\nexport const commentsSlice = createSlice({\n  name: \"comments\",\n  initialState,\n  reducers: {\n    clearTodo: (state, action) => {\n      state.isSuccess = true;\n    }\n  },\n  extraReducers: {\n    [__getComments.pending]: state => {\n      state.isLoading = true; // 네트워크 요청이 시작되면 로딩상태를 true로 변경합니다.\n    },\n    [__getComments.fulfilled]: (state, action) => {\n      state.isLoading = false; // 네트워크 요청이 끝났으니, false로 변경합니다.\n\n      state.comments = action.payload; // Store에 있는 comments에 서버에서 가져온 comments를 넣습니다.\n    },\n    [__getComments.rejected]: (state, action) => {\n      state.isLoading = false; // 에러가 발생했지만, 네트워크 요청이 끝났으니, false로 변경합니다.\n\n      state.error = action.payload; // catch 된 error 객체를 state.error에 넣습니다.\n    },\n    [__addComment.pending]: state => {\n      state.isLoading = true;\n      state.isSuccess = false;\n    },\n    [__addComment.fulfilled]: (state, action) => {\n      state.isLoading = false;\n      state.isSuccess = true;\n      state.comments = [...state.comments, action.payload];\n    },\n    [__addComment.rejected]: (state, action) => {\n      state.isLoading = false; // 에러가 발생했지만, 네트워크 요청이 끝났으니, false로 변경합니다.\n\n      state.error = action.payload; // catch 된 error 객체를 state.error에 넣습니다.\n    },\n    [__deleteComment.pending]: state => {\n      state.isLoading = true;\n      state.isSuccess = false;\n    },\n    [__deleteComment.fulfilled]: (state, action) => {\n      state.isLoading = false;\n      state.isSuccess = true;\n      state.comments = state.comments.filter(comment => comment.id !== action.payload);\n    },\n    [__deleteComment.rejected]: (state, action) => {\n      state.isLoading = false; // 에러가 발생했지만, 네트워크 요청이 끝났으니, false로 변경합니다.\n\n      state.error = action.payload; // catch 된 error 객체를 state.error에 넣습니다.\n    },\n    [__editComment.pending]: state => {\n      state.isLoading = true;\n    },\n    [__editComment.fulfilled]: (state, action) => {\n      state.isLoading = false;\n      state.comments = state.comments.map(comment => {\n        if (comment.id === action.payload.thisID) {\n          console.log(comment.comment, action.payload.editComment);\n          return { ...comment,\n            comment: action.payload.editComment\n          };\n        } else {\n          return comment;\n        }\n      });\n    },\n    [__editComment.rejected]: (state, action) => {\n      state.isLoading = false;\n      state.error = action.payload;\n    }\n  }\n});\nexport const {} = commentsSlice.actions;\nexport default commentsSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","axios","initialState","comments","isLoading","isSuccess","error","__getComments","payload","thunkAPI","data","get","fulfillWithValue","rejectWithValue","__addComment","post","__deleteComment","delete","__editComment","patch","id","commentsSlice","name","reducers","clearTodo","state","action","extraReducers","pending","fulfilled","rejected","filter","comment","map","thisID","console","log","editComment","actions","reducer"],"sources":["/Users/JJY/Desktop/project01/src/redux/modules/commentsSlice.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\nconst initialState = {\n  comments: [],\n  isLoading: false,\n  isSuccess: false,\n  error: null,\n};\n\nexport const __getComments = createAsyncThunk(\n  \"comments/getComments\",\n  async (payload, thunkAPI) => {\n    try {\n      const data = await axios.get(\"http://localhost:3001/comments\");\n      return thunkAPI.fulfillWithValue(data.data);\n    } catch (error) {\n      return thunkAPI.rejectWithValue(error);\n    }\n  }\n);\n\nexport const __addComment = createAsyncThunk(\n  \"comments/addComment\",\n  async (payload, thunkAPI) => {\n    try {\n      const data = await axios.post(\"http://localhost:3001/comments\", payload);\n      return thunkAPI.fulfillWithValue(data.data);\n    } catch (error) {\n      return thunkAPI.rejectWithValue(error);\n    }\n  }\n);\n\nexport const __deleteComment = createAsyncThunk(\n  \"comments/deleteComment\",\n  async (payload, thunkAPI) => {\n    try {\n      await axios.delete(`http://localhost:3001/comments/${payload}`);\n      return thunkAPI.fulfillWithValue(payload);\n    } catch (error) {\n      return thunkAPI.rejectWithValue(error);\n    }\n  }\n);\n\nexport const __editComment = createAsyncThunk(\n  \"comments/editComment\",\n  async (payload, thunkAPI) => {\n    try {\n      await axios.patch(`http://localhost:3001/comments/${payload.id}`, payload);\n      return thunkAPI.fulfillWithValue(payload);\n    } catch (error) {\n      return thunkAPI.rejectWithValue(error);\n    }\n  }\n);\n\n\nexport const commentsSlice = createSlice({\n  name: \"comments\",\n  initialState,\n  reducers: {\n    clearTodo: (state, action) => {\n      state.isSuccess = true\n    }\n  },\n  extraReducers: {\n    [__getComments.pending]: (state) => {\n      state.isLoading = true; // 네트워크 요청이 시작되면 로딩상태를 true로 변경합니다.\n    },\n    [__getComments.fulfilled]: (state, action) => {\n      state.isLoading = false; // 네트워크 요청이 끝났으니, false로 변경합니다.\n      state.comments = action.payload; // Store에 있는 comments에 서버에서 가져온 comments를 넣습니다.\n    },\n    [__getComments.rejected]: (state, action) => {\n      state.isLoading = false; // 에러가 발생했지만, 네트워크 요청이 끝났으니, false로 변경합니다.\n      state.error = action.payload; // catch 된 error 객체를 state.error에 넣습니다.\n    },\n    [__addComment.pending]: (state) => {\n      state.isLoading = true;\n      state.isSuccess = false;\n    },\n    [__addComment.fulfilled]: (state, action) => {\n      state.isLoading = false;\n      state.isSuccess = true;\n      state.comments = [...state.comments, action.payload]\n    },\n    [__addComment.rejected]: (state, action) => {\n      state.isLoading = false; // 에러가 발생했지만, 네트워크 요청이 끝났으니, false로 변경합니다.\n      state.error = action.payload; // catch 된 error 객체를 state.error에 넣습니다.\n    },\n    [__deleteComment.pending]: (state) => {\n      state.isLoading = true;\n      state.isSuccess = false;\n    },\n    [__deleteComment.fulfilled]: (state, action) => {\n      state.isLoading = false;\n      state.isSuccess = true;\n      state.comments = state.comments.filter((comment) => comment.id !== action.payload\n      )\n    },\n    [__deleteComment.rejected]: (state, action) => {\n      state.isLoading = false; // 에러가 발생했지만, 네트워크 요청이 끝났으니, false로 변경합니다.\n      state.error = action.payload; // catch 된 error 객체를 state.error에 넣습니다.\n    },\n    [__editComment.pending]: (state) => {\n      state.isLoading = true;\n    },\n    [__editComment.fulfilled]: (state, action) => {\n      state.isLoading = false;\n      \n      state.comments = state.comments.map((comment) => {\n        \n        if (comment.id === action.payload.thisID) {\n          console.log(comment.comment, action.payload.editComment)\n          return {...comment, comment:action.payload.editComment}\n        } else {\n          return comment\n        }\n      }\n      )\n    },\n    [__editComment.rejected]: (state, action) => {\n      state.isLoading = false;\n      state.error = action.payload;\n    },\n  },\n});\n\nexport const {} = commentsSlice.actions;\nexport default commentsSlice.reducer;"],"mappings":"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"},"metadata":{},"sourceType":"module"}